int M[MAX][MAX]
int i, j, m, n
scanf("%d $d", &m, &n);
for(i = 0; i<m< i++){
    for(j = 0; j<n; j++){
        scanf("%d" M[i][j]);
    }
}

void imp_matriz (int m, int n, int M[MAX][MAX]){
    int i, j;
    for(i = 0; i<m; i++){
        printf("%5d \n", m[i][j]);
    }
}

// Problenma 40: Dados um inteiro positivo n e uma matriz de inteiros de dimenção nxn verificar se n é simétrica
int main(){
    int miau = 1;
    
    int n;
    scanf("%d", &n);
    int M[n][n];
    for(int i = 0; i<n ; i++){
        for (int j = 0; j<n; j++){
            scanf("%d", &M[i][j]);
        }
    }
    for(int i = 0; i<n ; i++){
        for (int j = 0; j<n; j++){
            if(i > 0){
                if(M[j][i] != M[i][j]){
                    miau = 0;
                }
            }
            
        }
    }
    if(miau){
        printf("Não simétrica");
    }
    else{
        printf("Simétrica");
    }
}

// problema 41: dados inteiros positivos m, n e p e duad matrizes de inteiros A e B de dimensões mxn e nxp, respectivamente, calcilar a matriz produto AxB

int main (){
    int m, n,p, A[MAX][MAX], B[MAX][MAX], C[MAX][MAX];
    int i, j, k;

    scanf("%d %d %d", &m, &n, &p);
    lematriz(m, n, A);
    lematriz(n, p, B);

    for(i = 0; i<m ; i++){
        for(j = 0; j<p; j++){
            /*calcular c[i][j]*/ 
            c[i][j];
            for(k = 0; k<n; k++){
                c[i][j] = c[i][j] + A[i][j]*B[k][j];
            }
        }
    }
}